class SubstackForm extends HTMLElement{constructor(){super(),this.errorSvg='<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false">\n        <path d="M15 9L9 15M9 9L15 15M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n      </svg>',this.emailErrorMessage="Por favor usa un correo válido.",this.processErrorMessage='Algo no está funcionando. Por favor, intenta de nuevo. Si persiste, puedes contactarme a <a href="mailto:cristian@accesibilidadweb.today>cristian@accesibilidadweb.today</a> para suscribirte.</a>',this.successSvg='<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false">\n      <path d="M7.5 12L10.5 15L16.5 9M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n    </svg>'}static get observedAttributes(){return["domain"]}attributeChangedCallback(attr,oldVal,newVal){"domain"===attr&&(this.domain=newVal)}getTemplate(){const template=document.createElement("template");return template.innerHTML='\n      <form class="form | flow" novalidate>\n        <div class="form__container | l-has-sidebar">\n          <div class="form__input-container | l-content flow">\n            <label class="label" for="substackForm">Correo electrónico</label>\n            <p class="status error" id="substackInputError" data-inline data-form-error></p>\n            <input class="input" id="substackForm" type="email" aria-describedby="substackInputError" required  />\n          </div>\n          <div class="form__button-container | l-sidebar">\n            <button class="submit" type="submit">Suscribirse</button>\n          </div>\n        </div>\n        <div role="status" aria-busy="true" class="loader flow" tabindex="-1">\n        </div>\n        <div role="status" class="status" tabindex="-1" data-form-state></div>\n      </form>',template}render(){this.innerHTML=this.getTemplate().innerHTML}connectedCallback(){this.render();const form=this.querySelector("form"),email=this.querySelector("input"),loading=this.querySelector(".loader"),error=this.querySelector("[data-form-error]"),announce=this.querySelector("[data-form-state]");async function submitHandler(event){if(event.preventDefault(),!email.value)return error.innerHTML=`${this.errorSvg} ${this.emailErrorMessage}`,error.classList.remove("success"),error.classList.add("error"),void email.focus();try{announce.innerHTML="",error.innerHTML="",this.inputEmail=email.value,loading.innerHTML='<div class="loading"></div>\n        <p><b>Enviando...</b></p>',loading.focus();let request=await fetch("https://us-central1-substackapi.cloudfunctions.net/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:this.inputEmail,domain:this.domain})}),response=await request.json();loading.innerHTML="",announce.innerHTML=`<p>${this.successSvg} ¡Gracias por inscribirte! Te hemos enviado un correo de confirmación a <b>${this.inputEmail}</b> para que completes el proceso.</p>`,announce.classList.remove("error"),announce.classList.add("success")}catch(error){loading.hidden=!0,announce.innerHTML=`<p>${this.errorSvg} ${this.processErrorMessage}</p>`,announce.classList.remove("success"),announce.classList.add("error")}}form.addEventListener("submit",submitHandler.bind(this))}}customElements.define("substack-form",SubstackForm);