/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

* {
  font-family: "Atkinson Hyperlegible", sans-serif;
  text-align: center;
}

body {
  display: grid;
  grid-template-rows: 1fr auto;
  min-height: 100vh;
}

p {
  max-width: 50ch;
  margin-inline: auto;
}

main,
footer {
  padding: 1rem;
}

main {
  display: grid;
  align-items: center;
}

.wrapper {
  width: 100%;
  max-width: 76.5rem;
  margin: 0 auto;
}

[tabindex="-2"]:focus {
  outline: none;
}

h1,
strong {
  color: #881010;
}

.flow > * + * {
  margin-top: var(--flow-space, 1em);
}

.l-has-sidebar {
  --sidebar-gutter: 1em;
  --sidebar-width: 30em;
  display: flex;
  flex-wrap: wrap;
  gap: var(--sidebar-gutter);
  max-width: 50ch;
  margin-inline: auto;
}

.l-has-sidebar > .l-sidebar {
  flex-basis: var(--sidebar-width);
  flex-grow: 1;
}

.l-has-sidebar > .l-content {
  flex-basis: 0;
  flex-grow: 999;
  min-inline-size: 50%;
}

.form {
  --flow-space: 0.5em;
  margin-inline: auto;
  max-width: 50ch;
}

.form__container {
  --sidebar-width: 12em;
}

.form__input-container {
  display: grid;
  gap: 0.5em;
  justify-items: start;
}

.form__button-container {
  display: flex;
  align-items: flex-end;
}

footer {
  background-color: #881010;
  color: whitesmoke;
}

footer a {
  color: whitesmoke;
  font-weight: bold;
}

:is(button, a):focus {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.left {
  text-align: start;
}

.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

.label {
  font-weight: bold;
}

.input {
  width: 100%;
  line-height: 2;
  font-family: inherit;
  font-size: inherit;
  border: 2px solid #881010;
}

:is(.input, .submit):focus-visible {
  outline: 2px solid #881010;
  outline-offset: 2px;
}

.submit {
  padding: 0.5em 1em;
  width: 100%;
  color: whitesmoke;
  background-color: #881010;
  font-weight: bold;
  font-family: inherit;
  border-radius: 1em;
  border-color: transparent;
}

.loading {
  aspect-ratio: 1;
  margin-inline: auto;
  width: 3rem;
  border-radius: 50%;
  border: 5px solid #eaf0f6;
  border-top-color: #881010;
  animation: spinner 2s linear infinite;
}

.status {
  --status-bg: #bbf7c7;
  --status-text: #0d7221;
  padding: 1em;
  margin-inline: auto;
  max-width: 50ch;
  border: 2px solid var(--status-text);
  background-color: var(--status-bg);
  color: var(--status-text);
  border-radius: 0.5em;
}

.status:empty {
  display: none;
}

.status[data-inline] {
  margin-inline: 0;
  width: fit-content;
}

.status.error {
  --status-bg: #fce8e8;
  --status-text: #720d0d;
}

.status svg {
  width: 1em;
  height: 1em;
  vertical-align: middle;
  display: inline-flex;
  margin-right: 0.5ch;
}

@keyframes spinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
